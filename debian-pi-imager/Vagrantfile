#
# Create own Debian based RaspberyPI images/
#
# see https://wiki.debian.org/RaspberryPiImages
#
Vagrant.configure("2") do |config|
  $vagrant_dir = File.dirname(__FILE__)
  $base_dir = File.dirname($vagrant_dir)

  config.vagrant.plugins = ["vagrant-vbguest"]

  config.vm.box = "debian/testing64"
  config.vm.hostname = "debian-local"

  config.vm.synced_folder "#{$vagrant_dir}", "/vagrant", disabled: true
  config.vm.synced_folder "#{$base_dir}", "/vagrant", type: "rsync", :mount_options => ["ro"]
  # config.vm.synced_folder "#{ENV["HOME"]}/tmp", "/home/vagrant/host", type: "rsync", :mount_options => ["rw"]

  # Fails with grub error, needs `dpkg-reconfigure grub-pc`
  # config.vm.provision :shell, path: "#{$base_dir}/_scripts/upate-apt.sh"
  config.vm.provision :shell, inline: "apt-get update"
  config.vm.provision :shell, path: "#{$base_dir}/_scripts/install-linux-tools.sh"
  config.vm.provision :shell, inline: <<-SHELL
    apt-get install -y \
      vmdb2 \
      dosfstools \
      qemu-user-static \
      binfmt-support \
      time \
      kpartx \
      build-essential
  SHELL

  config.vm.provision :shell, privileged: false, path: "#{$base_dir}/_scripts/install-dotfiles.sh"
  config.vm.provision :shell, privileged: false, path: "#{$base_dir}/_scripts/install-shell-scripts.sh"

  config.vm.provision :shell, privileged: false, inline: <<-SHELL
    (
      cd "${HOME}/src" &&
      git clone --recursive https://salsa.debian.org/raspi-team/image-specs.git
    )
  SHELL

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.no_install = true
  end
end
