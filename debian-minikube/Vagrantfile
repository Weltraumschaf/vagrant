Vagrant.configure("2") do |config|
  $vagrant_dir = File.dirname(__FILE__)
  $base_dir = File.dirname($vagrant_dir)

  config.vm.box = "debian/buster64"
  config.vm.hostname = "debian-minikube"
  config.vm.network "public_network"

  config.vm.synced_folder $vagrant_dir, "/vagrant", disabled: true
  config.vm.synced_folder "#{$base_dir}", "/vagrant", type: "rsync", :mount_options => ["ro"]

  config.vm.provision :shell, path: "#{$base_dir}/_scripts/upate-apt.sh"
  config.vm.provision :shell, path: "#{$base_dir}/_scripts/install-linux-tools.sh"
  config.vm.provision :shell, path: "#{$base_dir}/_scripts/install-docker.sh"
  config.vm.provision :shell, path: "#{$base_dir}/_scripts/install-minikube.sh"

  config.vm.provision :shell, privileged: false, path: "#{$base_dir}/_scripts/install-dotfiles.sh"
  config.vm.provision :shell, privileged: false, path: "#{$base_dir}/_scripts/install-shell-scripts.sh"
  # Using sudo -g to run the command w/ newly created group from installation w/o the need of relogin.
  # Redirecting STDERR to /dev/null because Minikube print download progress
  # for the images to STDERR which clutters up the Vagrant output w/ error output!
  config.vm.provision :shell, privileged: false, inline: "sudo -g docker minikube start 2>/dev/null"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4096"
  end

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.no_install = true
  end
end
